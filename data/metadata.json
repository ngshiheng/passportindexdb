{
    "title": "Passport Index Database",
    "description": "Tracking historical changes in passport rankings and visa requirements.",
    "license": "MIT",
    "license_url": "https://github.com/ngshiheng/passportindexdb/blob/main/LICENSE",
    "source": "Henley Passport Index",
    "source_url": "https://www.henleyglobal.com/passport-index",
    "databases": {
        "passportindex": {
            "queries": {
                "strongest_passports": {
                    "sql": "SELECT c.name as country, cr.year, cr.rank, cr.visa_free_count\nFROM Country c\nJOIN CountryRanking cr ON c.code = cr.country_code\nWHERE cr.year = CASE WHEN :year IS NULL OR :year = '' THEN (SELECT MAX(year) FROM CountryRanking) ELSE :year END\nORDER BY cr.rank ASC\nLIMIT 20",
                    "title": "Countries with Strongest Passports",
                    "description": "Shows the top 20 countries with the most powerful passports based on ranking and visa-free access",
                    "params": [
                        "year"
                    ]
                },
                "weakest_passports": {
                    "sql": "SELECT c.name as country, cr.year, cr.rank, cr.visa_free_count\nFROM Country c\nJOIN CountryRanking cr ON c.code = cr.country_code\nWHERE cr.year = CASE WHEN :year IS NULL OR :year = '' THEN (SELECT MAX(year) FROM CountryRanking) ELSE :year END\nORDER BY cr.rank DESC\nLIMIT 20",
                    "title": "Countries with Weakest Passports",
                    "description": "Shows the 20 countries with the most restricted passports based on ranking and visa-free access",
                    "params": [
                        "year"
                    ]
                },
                "visa_reciprocity": {
                    "sql": "WITH reciprocity AS (\n  SELECT \n    c1.name as from_country,\n    c2.name as to_country,\n    vr1.requirement_type as outbound_requirement,\n    vr2.requirement_type as inbound_requirement,\n    CASE WHEN vr1.requirement_type = vr2.requirement_type THEN 'Reciprocal' ELSE 'Non-reciprocal' END as relationship,\n    vr1.effective_date\n  FROM VisaRequirement vr1\n  JOIN VisaRequirement vr2 ON vr1.from_country = vr2.to_country AND vr1.to_country = vr2.from_country\n  JOIN Country c1 ON vr1.from_country = c1.code\n  JOIN Country c2 ON vr1.to_country = c2.code\n  WHERE vr1.effective_date = (SELECT MAX(effective_date) FROM VisaRequirement WHERE from_country = vr1.from_country AND to_country = vr1.to_country)\n  AND vr2.effective_date = (SELECT MAX(effective_date) FROM VisaRequirement WHERE from_country = vr2.from_country AND to_country = vr2.to_country)\n  AND (COALESCE(NULLIF(:from_country, ''), 'SG') = vr1.from_country)\n  AND (:to_country IS NULL OR :to_country = '' OR vr1.to_country = :to_country)\n)\nSELECT from_country, to_country, outbound_requirement, inbound_requirement, relationship, effective_date\nFROM reciprocity\nORDER BY from_country, to_country",
                    "title": "Visa Reciprocity Analysis",
                    "description": "Compares visa requirements between pairs of countries to identify reciprocal and non-reciprocal relationships. Default to Singapore (SG).",
                    "params": [
                        "from_country",
                        "to_country"
                    ]
                },
                "regional_visa_analysis": {
                    "sql": "SELECT\n  c1.region as from_region,\n  c2.region as to_region,\n  vr.requirement_type,\n  COUNT(*) as count\nFROM VisaRequirement vr\nJOIN Country c1 ON vr.from_country = c1.code\nJOIN Country c2 ON vr.to_country = c2.code\nWHERE vr.effective_date = (\n  SELECT MAX(effective_date) FROM VisaRequirement \n  WHERE from_country = vr.from_country AND to_country = vr.to_country\n  AND (strftime('%Y', effective_date) = CASE WHEN :year IS NULL OR :year = '' THEN (SELECT MAX(strftime('%Y', effective_date)) FROM VisaRequirement) ELSE :year END)\n)\nAND (:from_region IS NULL OR :from_region = '' OR c1.region = :from_region)\nAND (:to_region IS NULL OR :to_region = '' OR c2.region = :to_region)\nGROUP BY c1.region, c2.region, vr.requirement_type\nORDER BY c1.region, c2.region, count DESC",
                    "title": "Regional Visa Requirement Patterns",
                    "description": "Aggregates visa requirements between world regions to identify regional patterns and relationships",
                    "params": [
                        "year",
                        "from_region",
                        "to_region"
                    ]
                },
                "passport_strength_change": {
                    "sql": "WITH yearly_ranks AS (\n  SELECT \n    c.name as country,\n    cr.year,\n    cr.rank,\n    cr.visa_free_count,\n    LAG(cr.rank) OVER (PARTITION BY cr.country_code ORDER BY cr.year) as prev_rank,\n    LAG(cr.visa_free_count) OVER (PARTITION BY cr.country_code ORDER BY cr.year) as prev_visa_free_count\n  FROM CountryRanking cr\n  JOIN Country c ON cr.country_code = c.code\n)\nSELECT \n  country,\n  year,\n  rank,\n  visa_free_count,\n  prev_rank,\n  prev_visa_free_count,\n  (prev_rank - rank) as rank_improvement,\n  (visa_free_count - prev_visa_free_count) as visa_free_increase\nFROM yearly_ranks\nWHERE prev_rank IS NOT NULL\nORDER BY year DESC, rank_improvement DESC",
                    "title": "Passport Strength Changes Over Time",
                    "description": "Tracks how countries' passport rankings and visa-free access have changed between years"
                },
                "visa_policy_changes": {
                    "sql": "SELECT \n  strftime('%Y-%m', vr2.effective_date) as change_date,\n  c1.name as from_country,\n  c2.name as to_country,\n  vr1.requirement_type as old_requirement,\n  vr2.requirement_type as new_requirement,\n  CASE \n    WHEN vr1.requirement_type = 'visa_required' AND vr2.requirement_type IN ('visa_free', 'visa_on_arrival') THEN 'Liberalization'\n    WHEN vr1.requirement_type IN ('visa_free', 'visa_on_arrival') AND vr2.requirement_type = 'visa_required' THEN 'Restriction'\n    ELSE 'Policy Change'\n  END as change_type\nFROM VisaRequirement vr1\nJOIN VisaRequirement vr2 ON \n  vr1.from_country = vr2.from_country AND \n  vr1.to_country = vr2.to_country AND\n  vr2.effective_date > vr1.effective_date\nJOIN Country c1 ON vr1.from_country = c1.code\nJOIN Country c2 ON vr1.to_country = c2.code\nWHERE NOT EXISTS (\n  SELECT 1 FROM VisaRequirement vr3\n  WHERE vr3.from_country = vr1.from_country\n  AND vr3.to_country = vr1.to_country\n  AND vr3.effective_date > vr1.effective_date\n  AND vr3.effective_date < vr2.effective_date\n)\nAND vr1.requirement_type != vr2.requirement_type\nAND (:from_country IS NULL OR :from_country = '' OR vr1.from_country = :from_country)\nAND (:to_country IS NULL OR :to_country = '' OR vr1.to_country = :to_country)\nAND ((:year_from IS NULL OR :year_from = '') OR strftime('%Y', vr2.effective_date) >= :year_from)\nAND ((:year_to IS NULL OR :year_to = '') OR strftime('%Y', vr2.effective_date) <= :year_to)\nORDER BY vr2.effective_date DESC\nLIMIT CASE WHEN :limit IS NULL OR :limit = '' THEN 100 ELSE :limit END",
                    "title": "Visa Policy Changes Over Time",
                    "description": "Tracks significant historical changes in visa policies between countries, showing when requirements became more or less restrictive",
                    "params": [
                        "from_country",
                        "to_country",
                        "year_from",
                        "year_to",
                        "limit"
                    ]
                },
                "regional_passport_strength": {
                    "sql": "SELECT \n  c.region,\n  cr.year,\n  ROUND(AVG(cr.rank), 2) as avg_rank,\n  ROUND(AVG(cr.visa_free_count), 2) as avg_visa_free_count,\n  MIN(cr.rank) as best_rank,\n  MAX(cr.visa_free_count) as max_visa_free_count,\n  COUNT(DISTINCT c.code) as countries_in_region\nFROM Country c\nJOIN CountryRanking cr ON c.code = cr.country_code\nWHERE (:region IS NULL OR :region = '' OR c.region = :region)\n  AND cr.year = CASE WHEN :year IS NULL OR :year = '' THEN (SELECT MAX(year) FROM CountryRanking) ELSE :year END\nGROUP BY c.region, cr.year\nORDER BY cr.year DESC, avg_rank ASC",
                    "title": "Regional Passport Strength Comparison",
                    "description": "Compares average passport strength by world region, showing which regions have strongest access",
                    "params": [
                        "year",
                        "region"
                    ]
                },
                "visa_requirement_distribution": {
                    "sql": "WITH selected_year AS (\n  SELECT CASE WHEN :year IS NULL OR :year = '' THEN (SELECT MAX(strftime('%Y', effective_date)) FROM VisaRequirement) ELSE :year END AS year\n),\nlatest_requirements AS (\n  SELECT vr.*, strftime('%Y', vr.effective_date) as year\n  FROM VisaRequirement vr\n  JOIN selected_year sy ON strftime('%Y', vr.effective_date) = sy.year\n  WHERE vr.effective_date = (\n    SELECT MAX(effective_date) FROM VisaRequirement\n    WHERE from_country = vr.from_country AND to_country = vr.to_country\n      AND strftime('%Y', effective_date) = sy.year\n  )\n)\nSELECT\n  year,\n  requirement_type,\n  COUNT(*) as count,\n  ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM latest_requirements), 2) as percentage\nFROM latest_requirements\nGROUP BY year, requirement_type\nORDER BY count DESC",
                    "title": "Global Visa Requirement Distribution",
                    "description": "Shows the distribution of different visa requirement types worldwide",
                    "params": [
                        "year"
                    ]
                }
            },
            "tables": {
                "Country": {
                    "sortable_columns": [
                        "code",
                        "name",
                        "region"
                    ],
                    "facets": [
                        "region"
                    ],
                    "description": "Information about countries included in the passport index"
                },
                "CountryRanking": {
                    "sortable_columns": [
                        "country_code",
                        "year",
                        "rank",
                        "visa_free_count"
                    ],
                    "facets": [
                        "year"
                    ],
                    "description": "Annual rankings and visa-free travel counts for countries"
                },
                "VisaRequirement": {
                    "sortable_columns": [
                        "from_country",
                        "to_country",
                        "effective_date",
                        "requirement_type"
                    ],
                    "facets": [
                        "requirement_type",
                        "effective_date"
                    ],
                    "description": "Visa requirements between countries"
                }
            }
        }
    },
    "about": "Made by jerrynsh.com",
    "about_url": "https://jerrynsh.com/"
}